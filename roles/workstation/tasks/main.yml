---
- name: Desktop apps
  apt: name={{items}}  state=latest
  vars:
    items:
    - transmission
    - libreoffice
    - konversation
    - evolution

- name: Install Snap apps
  snap:  
    state: present 
    classic: yes
    name:
      - pycharm-community
      - jupyter
      - code
      - atom
      - photogimp
      - gimp
      - inkscape
      - google-cloud-sdk

  register: my_snap
  ignore_errors: false
  #- name: Remove snap terraform
  # snap: name=terraform state=absent

- debug:
    msg: my_snap  
- name: Add apt Key terraform
  shell: 'sudo curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -'

- apt: update_cache=yes
  
#- name: Add apt repo for terraform
#  shell: 'sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"'

- name: System utils
  apt: name={{items}} state=latest
  vars:
    items:
    - lvm2
    - elinks
    - trickle
    - rsync
    - htop
    - ansible
    - ctop
    - virt-goodies
    - virt-manager
    - virt-top
    - virtinst
    - docker.io
    - docker
    - mysql-utilities
    - fakeroot
    - terraform
  ignore_errors: True
  register: result
- name: Dev utils
  apt: name={{items}} state=latest
  vars:
    items:
      # - python3-pip
      #    - python-pip
    - idle3
    - libmysqlclient-dev
    - default-libmysqlclient-dev
    - retext
    - puppet-agent
    - python3
    - python3-dev
      #    - mysql-workbench
      # - vim-syntax-docker
    - python3-pip
  ignore_errors: True
- name: Pip installs
  pip:  name={{items}} state=latest 
    #executable=pip3
  vars:
    items:
    - Mediainfo
    - pymediainfo
    - pymiparse
    - ansible-playbook-grapher
    - ansible-inventory-grapher
    - gperf
    - sadf
    - gperf
    - virtualenv
    - virtualenvwrapper
    - pytz
    - django
    - pymysql
    - django-mysql-pymysql
    - pymysql-utils
    - mysqlclient
    - paramiko
    - matplotlib
    - pandas
    - jupyter
    - wordcloud
    - fileupload
    - ipywidgets
    - psutil
    - antlr4-python3-runtime

- name: DevOps Utils
  apt: name={{items}} state=latest
  vars:
    items:
    - ansible-lint
    - multipath-tools
    - ansible-tower-cli
  ignore_errors: True
  register: result
- name: "hosts file"
  blockinfile: 
    backup: yes 
    create: yes
    dest: /etc/hosts 
    #insertafter: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
    block: |
      {{ item.ip }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  loop:
    - { ip: 10.42.0.201, name: kal-inspiron kal-inspiron.kal-net.home }
    - { ip: 10.42.0.215, name: kal-xt3    kal-xt3.kal-net.home }
    - { ip: 10.42.0.2, name: kalibur-mce    kalibur-mce.kal-net.home }
    - { ip: 10.42.0.30, name: kal-bunker    kal-bunker.kal-net.home }
    - { ip: 10.42.0.25, name: kal-bunker2    kal-bunker2.kal-net.home }
    - { ip: 10.42.0.89, name: ipa01    ipa01.kal-net.home }

- name: Debugging and troubleshooting tools
  apt: name={{pkgs}} state=latest
  vars:
     pkgs:
       - systemtap-sdt-dev
       - linux-tools-common 
       - apache2-utils
       - atop

- name: Security
  apt: name={{items}} state=latest
  vars:
    items:
      - firewalld
  ignore_errors: True
  notify: 
    - firewalld reload 

- name: Handlers
  systemd: 
    name: firewalld    
    state: started 
    enabled: yes
